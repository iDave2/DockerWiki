#
#  idave2/mediawiki image generator
#
#  See '.env' for environment defaults.
#
####-####+####-####+####-####+####-####+####-####+####-####+####-####+####

FROM mediawiki:1.39 AS view

# Author keeps mumbling "Less is more, less is more." Strange indeed.
RUN set -eux && apt update && apt install less

# Copy LocalSettings.php generated by MediaWiki installation wizard.
COPY LocalSettings.php /var/www/html/

# Adjust default server port if builder is trying to break something.
# PORTS=127.0.0.1:8080:80
# port=$(echo $PORTS | cut -d ':' -f 2)
# RUN port=$(echo $PORTS | cut -d ':' -f 2);  \
#     perl -i.bak -pwe 's|^(\$wgServer\s*=).*|$1 "http://localhost:'8080'";|' LocalSettings.php

# RUN perl -i.bak2 -pwe "s/%MW_DB_USER%/$MW_DB_USER/" LocalSettings.php

# Generate server's secret key.
# RUN key=$(perl -we "print map { ('0'..'9','a'..'f')[int(rand(16))] } 1..64"); \
#     perl -i -pwe 's/^(\$wgSecretKey\s*=).*/$1 "'$key'";/' LocalSettings.php

# Modify LocalSettings.php with requested parameters.
ARG MW_DB_DATABASE MW_DB_USER MW_DB_PASSWORD

# Until "docker build --no-cache-filter" is available, use --no-cache to
# prevent this secret key from being cached.
RUN set -eux; \
  secretKey=$(perl -we "print map { ('0'..'9','a'..'f')[int(rand(16))] } 1..64"); \
  # echo KEY IS $secretKey HAVE A NICE DAY; \
  perl -i.bak -pwe " \
    s|%%wgSecretKey%%|$secretKey|; \
    s|%%wgDBname%%|$MW_DB_DATABASE|; \
    s|%%wgDBuser%%|$MW_DB_USER|; \
    s|%%wgDBpassword%%|$MW_DB_PASSWORD|; \
  " LocalSettings.php

####-####+####-####+####-####+####-####+####-####+####-####+####-####+####
#
#  The initial database -- mariadb/70-initdb.sql.gz -- was created after
#  manually running the MediaWiki update script,
#
#    $ php maintenance/update.php.
#
#  This script does "post installation" for whatever extensions are
#  activated; in our case, it creates table mediawiki.oathauth_users
#  for TOTP fun. Once initial database is checked in, this step does
#  not need repeating.
#
#  Original MariaDB entry point remains active.
