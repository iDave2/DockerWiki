#
#  idave2/mediawiki image generator
#
#  See '.env' for environment defaults.
#
####-####+####-####+####-####+####-####+####-####+####-####+####-####+####

FROM mediawiki:1.40 AS view

# Configurable --build-arg's.
ARG MW_ADMINISTRATOR MW_PASSWORD MW_DB_DATABASE MW_DB_USER MW_DB_PASSWORD

# Who keeps mumbling "Less is more, less is more?"
# This layer helps with debugging and can be removed.
RUN set -eux && apt update && apt install -y less iputils-ping

# Use a distinct work area. Go to your room.
RUN set -eux && mkdir DockerWiki; \
    echo "$MW_DB_PASSWORD" > DockerWiki/dbpassfile; \
    echo "$MW_PASSWORD" > DockerWiki/passfile;

# It seems that no mariadb network is available during mediawiki builds,
# which sounds about right, so we cannot run maintenance/install.php here,
# so we will do it in cake.sh after this (unconfigured) mediawiki image is
# launched in a new wiki-view-1 container. Neato.

# LocalSettings is generated by manual installer now.
# COPY LocalSettings.php /var/www/html/

# Perl is always fun. Remember the top secret key.
# RUN set -eux; \
#   secretKey=$(perl -we "print map { ('0'..'9','a'..'f')[int(rand(16))] } 1..64"); \
#   # echo KEY IS $secretKey HAVE A NICE DAY; \
#   perl -i.bak -pwe " \
#     s|%%wgSecretKey%%|$secretKey|; \
#     s|%%wgDBname%%|$MW_DB_DATABASE|; \
#     s|%%wgDBuser%%|$MW_DB_USER|; \
#     s|%%wgDBpassword%%|$MW_DB_PASSWORD|; \
#   " LocalSettings.php

####-####+####-####+####-####+####-####+####-####+####-####+####-####+####
#
#  TODO: This may be stale, check before shipping.
#
#  The initial database -- mariadb/70-initdb.sql.gz -- was created after
#  manually running the MediaWiki update script,
#
#    $ php maintenance/update.php.
#
#  This script does "post installation" for whatever extensions are
#  activated; in our case, it creates table mediawiki.oathauth_users
#  for TOTP fun. Once initial database is checked in, this step does
#  not need repeating.
#
#  Original MediaWiki entry point remains active.
